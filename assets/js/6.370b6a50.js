(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{375:function(t,s,a){t.exports=a.p+"assets/img/context.8ab87c37.png"},386:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"javascript的执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript的执行上下文"}},[t._v("#")]),t._v(" Javascript的执行上下文")]),t._v(" "),n("blockquote",[n("p",[t._v("执行上下文是当前执行代码的执行环境, 它决定了当前执行代码所能使用的变量和函数, 每个上下文都有一个关联的变量对象(variable object 简称VO), VO中定义了所有变量和函数.")])]),t._v(" "),n("p",[t._v("执行上下文主要包括三种:")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("全局执行环境")]),n("br"),t._v("\n全局执行环境为最外层的上下文, 根据ECMAScript实现的宿主环境. 表示全局上下文的对象可能不一致. 在浏览器中是window对象, NodeJs中global object对象")])]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("💡 var在全局中变量会成为window对象的属性 let和const则不会,但是解析作用域的效果是一样的")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[n("strong",[t._v("函数执行环境")]),n("br"),t._v("\n函数执行环境是函数执行之前产生")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("eveal(不推荐使用, 基本可以忽略)")])])])]),t._v(" "),n("p",[t._v("从一个例子分析JavaScript的执行上下文的生命周期")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" anotherColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tempColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" anotherColor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      anotherColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tempColor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[n("strong",[t._v("具体步骤:")])]),t._v(" "),n("ol",[n("li",[t._v("生成存放执行上下文的堆栈, 然后生成一个全局的执行上下文, 将它放入堆栈中(也叫压栈)")]),t._v(" "),n("li",[t._v("当遇到changeColor调用执行时, 在此之前将创建一个changeColor函数的执行上下文, 将放入堆栈中,\n此时changeColor上下文在全局上下文上面,即在堆栈的栈顶")]),t._v(" "),n("li",[t._v("执行changeColor代码时, 遇到了swapColor函数调用执行, 在执行之前将创建swapColor函数的执行上下文, 将它压栈, 此时swapColor上下文在堆栈的栈顶")]),t._v(" "),n("li",[t._v("执行完swapColor代码后 swapColor上下文被弹出栈, 然后changeColor出栈. 全局上下文只有在关闭网页或浏览器的才销毁")])]),t._v(" "),n("p",[t._v("如图所示:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:"上下文生命周期示意图"}})]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("💡 函数中 return能终止代码的执行, 因此会直接将当前执行上下文弹出栈.")])])])}),[],!1,null,null,null);s.default=r.exports}}]);